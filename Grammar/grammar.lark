start: code_block
code_block: statement+


%import common.WS
%import common.CNAME
%import common.NUMBER
LITERAL: NUMBER 
IDENTIFIER: CNAME
!return_stmt: "return" expr ";"
var_def:  "val" NAME ":" IDENTIFIER "=" ["\""]* VALUE ["\""]* ";"
var_redef:  "val" NAME "<=" ["\""]* VALUE ["\""]* ";"
func_def: "fn" IDENTIFIER "(" (IDENTIFIER IDENTIFIER)? ("," IDENTIFIER IDENTIFIER)*  ")" "=>" IDENTIFIER block
func_call: ">" IDENTIFIER "(" (VALUE)* ("," VALUE)* ");"
if:        "if(" VALUE ")" then ("else" VALUE)? 

print: "print(" VALUE ("," VALUE)* ");"
zprint: "!print(" VALUE ("," VALUE)* ");"
!expr: LITERAL
?statement: return_stmt | var_def | func_def | zprint | print | func_call | var_redef | if
!block: "{" statement* "}"
!then:  "-then" statement "-end"
program: func_def+ 
VALUE: "+" | "-" | "/" | "*" | "**" | "%" | "//" | "=" | "^" | "&&" | NAME | STRING | DEC_NUMBER | IDENTIFIER | (NAME | STRING | DEC_NUMBER | IDENTIFIER ) (("+" | "-" | "/" | "*" | "**" | "%" | "//" | "^" | "&&" | ">" | "<" | "==" | "!=" "<=" | ">=") (NAME | STRING | DEC_NUMBER | IDENTIFIER ))* 
name: NAME
NEWLINE: /\\n/
COMMENT : /\/\// /.*/
        | /\/\*/ /.*/ /\*\//
%ignore COMMENT
%import python (NAME, STRING, DEC_NUMBER)
%import common.WS
%ignore WS
